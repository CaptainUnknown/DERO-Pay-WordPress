{"version":3,"file":"rpcCall.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNO,MAAMA,OAAO,GAAG,MAAOC,OAAP,IAAmB;EACxC,IAAI;IACF,MAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;IACA,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAMH,UAAU,CAACI,KAAX,CAAiB,IAAIC,KAAJ,CAAW,SAAX,CAAjB,CAAP,EAA+C,IAA/C,CAA5B;IAEA,MAAM;MAAEC,aAAF;MAAiBC,MAAjB;MAAyBC;IAAzB,IAAoCT,OAA1C;IAEA,MAAMU,GAAG,GAAG,wBAAZ;IAEA,MAAMC,OAAO,GAAG;MACd,gBAAgB;IADF,CAAhB;IAIAA,OAAO,CAAC,eAAD,CAAP,GAA2B,WAAWC,IAAI,CAAE,GAAEL,aAAc,EAAlB,CAA1C;IAEA,MAAMM,IAAI,GAAG;MACX,WAAW,KADA;MAEX,MAAM,GAFK;MAGX,UAAUL;IAHC,CAAb;;IAMA,IAAIC,MAAJ,EAAY;MACVI,IAAI,CAAC,QAAD,CAAJ,GAAiBJ,MAAjB;IACD;;IAED,MAAMK,QAAQ,GAAG,IAAIC,GAAJ,CAAQ,UAAR,EAAoBL,GAApB,CAAjB;IACA,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAD,EAAW;MAChCN,MAAM,EAAE,MADwB;MAEhCU,IAAI,EAAE,SAF0B;MAGhCP,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB,WAAWC,IAAI,CAAE,GAAEL,aAAc,EAAlB;MAFzB,CAHuB;MAOhCM,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAP0B;MAQhCQ,MAAM,EAAEpB,UAAU,CAACoB;IARa,CAAX,CAAvB;IAWAC,YAAY,CAACnB,SAAD,CAAZ;;IAEA,IAAIa,GAAG,CAACO,EAAR,EAAY;MACV,MAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAnB;MACA,OAAO;QAAED;MAAF,CAAP;IACD,CAHD,MAGO;MACL,OAAO;QAAEE,GAAG,EAAEV,GAAG,CAACW,UAAJ,IAAkB;MAAzB,CAAP;IACD;EACF,CA5CD,CA4CE,OAAOD,GAAP,EAAY;IACZ,IAAIA,GAAG,CAACE,IAAJ,KAAa,YAAjB,EAA+B;MAC7B,OAAO;QAAEF,GAAG,EAAG;MAAR,CAAP;IACD;;IACD,OAAO;MAAEA,GAAG,EAAEA,GAAG,CAACG;IAAX,CAAP;EACD;AACF,CAnDM,C","sources":["webpack://dero-rpc-bridge/webpack/bootstrap","webpack://dero-rpc-bridge/webpack/runtime/define property getters","webpack://dero-rpc-bridge/webpack/runtime/hasOwnProperty shorthand","webpack://dero-rpc-bridge/webpack/runtime/make namespace object","webpack://dero-rpc-bridge/./frontend/rpcCall.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const rpcCall = async (options) => {\r\n  try {\r\n    const controller = new AbortController()\r\n    const timeoutId = setTimeout(() => controller.abort(new Error(`timeout`)), 5000)\r\n\r\n    const { authenticator, method, params } = options\r\n\r\n    const url = 'http://localhost:10103'\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n\r\n    headers[\"Authorization\"] = \"Basic \" + btoa(`${authenticator}`)\r\n\r\n    const body = {\r\n      \"jsonrpc\": \"2.0\",\r\n      \"id\": \"1\",\r\n      \"method\": method\r\n    }\r\n\r\n    if (params) {\r\n      body[\"params\"] = params\r\n    }\r\n\r\n    const fetchUrl = new URL('json_rpc', url)\r\n    const res = await fetch(fetchUrl, {\r\n      method: \"POST\",\r\n      mode: 'no-cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Basic \" + btoa(`${authenticator}`)\r\n      },\r\n      body: JSON.stringify(body),\r\n      signal: controller.signal\r\n    })\r\n\r\n    clearTimeout(timeoutId)\r\n\r\n    if (res.ok) {\r\n      const data = await res.json()\r\n      return { data }\r\n    } else {\r\n      return { err: res.statusText || \"Error\" }\r\n    }\r\n  } catch (err) {\r\n    if (err.name === 'AbortError') {\r\n      return { err: `Timeout` }\r\n    }\r\n    return { err: err.message }\r\n  }\r\n}\r\n"],"names":["rpcCall","options","controller","AbortController","timeoutId","setTimeout","abort","Error","authenticator","method","params","url","headers","btoa","body","fetchUrl","URL","res","fetch","mode","JSON","stringify","signal","clearTimeout","ok","data","json","err","statusText","name","message"],"sourceRoot":""}